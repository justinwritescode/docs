# This workflow copies the docs subfolder from another repo into the docs/reponame subfolder of this repo

name: gh docs cd

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
        
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      repository_name:
        required: true
        type: string
  
# Sets permissions of the GITHUB_TOKEN to allow writing to this repo
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "docs"
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-folder-to-folder:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Setup git and the GITHUB_TOKEN
        #run: |
          #/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
          #/usr/bin/git submodule foreach --recursive git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :
          #/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
          #/usr/bin/git submodule foreach --recursive git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :
          #/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ${{secrets.GITHUB_TOKEN}}
      - name: Find the target repository name
        run: |
          repo_name=$(echo "${{github.workflow.inputs.github_repo}}"|cut -d "/" -f 2);
          echo "${{github.workflow.inputs.github_repo}}"
          echo "Target repo name: $repo_name";
      #- name: Clone the docs repo
        #run: |
          #echo "Cloning the docs repo..."
          #/usr/bin/git clone --single-branch --branch main "https://github.com/justinwritescode/docs.git" /tmp/docs
      - name: Clone the target repo
        run: |
          echo "Cloning the target repo..."
          mkdir -p "/home/runner/work/$repo_name"
          /usr/bin/git clone --single-branch --branch main "https://github.com/justinwritescode/$repo_name" "/home/runner/work/$repo_name"
      - name: Remove the target folder if it exists
        run: |
          if [[ -D "/home/runner/work/docs/docs/$repo_name" ]]; then
            rm -rf "/home/runner/work/docs/docs/$repo_name";
          fi
      - name: Copy the files from the target repo into the docs folder
        run: cp -R "/home/runner/work/$repo_name/docs" "/home/runner/work/docs/docs/$repo_name"
      - name: Commit the changes to the docs repo  
        run: |
          cd /home/runner/work/docs/docs/$repo_name
          /usr/bin/git add .
          /usr/bin/git commit -m "Docs CD Deployment of ${{github.workflow.inputs.github_repo}} repo"
          /usr/bin/git push -u origin HEAD:main
