# This workflow copies the docs subfolder from another repo into the docs/reponame subfolder of this repo

name: gh docs cd

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
        
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      repository_name:
        required: true
        type: string
  
# Sets permissions of the GITHUB_TOKEN to allow writing to this repo
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "docs"
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-folder-to-folder:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Clone the repos and copy the contents of one's folder to another
        run: |
          cat "${{secrets.GITHUB_TOKEN}}" > "/tmp/github_token.txt"
          repo_name=$(echo "${{github.workflow.inputs.github_repo}}"|cut -d "/" -f 2
          echo "Cloning the target repo."
          git config --global user.email github-actions@justinwritescode.com
          git config --global user.name github-actions
          git clone --single-branch --branch main "https://github-actions:${{secrets.GITHUB_TOKEN}}@github.com/justinwritescode/docs.git" /tmp/docs
          mkdir -p "/tmp/docs/$repo_name"
          git clone --single-branch --branch main "https://github-actions:${{secrets.GITHUB_TOKEN}}@github.com/justinwritescode/${{github.workflow.inputs.github_repo}}" "/tmp/${{$repo_name}}"
          if [[ -D "/tmp/docs/$repo_name" ]]; then
            rm -rf "/tmp/docs/$repo_name";
          fi
          cp -R "/tmp/$repo_name" "/tmp/docs/$repo_name"
          cd /tmp/docs
          git add .
          git commit -m "Docs CD Deployment of ${{github.workflow.inputs.github_repo}} repo"
          git push -u origin HEAD:main
